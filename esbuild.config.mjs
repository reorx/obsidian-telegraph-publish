import builtins from 'builtin-modules'
import child_process from 'child_process'
import esbuild from 'esbuild'
import fs from 'fs'
import process from 'process'

const prod = process.env.BUILD_ENV === 'production'

let runScriptPlugin = {
	name: 'run-script',
	setup(build) {
		build.onEnd(result => {
			if (result.errors.length > 0) {
				return
			}
			const scriptName = 'sync-plugin.sh'
			if (!fs.existsSync(scriptName)) {
				return
			}
			console.log(`run ${scriptName}`)
			child_process.exec(`bash ${scriptName}`, (err, stdout, stderr) => {
				if (err) {
					console.error(`run ${scriptName} error:`, err, stdout, stderr)
				}
			})
		})
	},
}

const result = await esbuild.build({
	banner: {
		js: '/* THIS IS A GENERATED/BUNDLED FILE BY ESBUILD */',
	},
	define: {
		'process.env.BUILD_ENV': JSON.stringify(process.env.BUILD_ENV),
	},
	entryPoints: ['main.ts', 'styles.css'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2016',
	logLevel: 'info',
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outdir: 'build',
	plugins: [runScriptPlugin],
	metafile: true,
}).catch(() => process.exit(1))

if (process.env.ESBUILD_METAFILE) {
	fs.writeFileSync('build/meta.json', JSON.stringify(result.metafile))
}
